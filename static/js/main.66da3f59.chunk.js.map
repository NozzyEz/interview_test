{"version":3,"sources":["fonts/FjallaOne-Regular.ttf","components/GlobalStyles.tsx","components/Header.tsx","components/FormItem.tsx","components/Form.tsx","components/CodeItem.tsx","components/Display.tsx","App.tsx","index.tsx"],"names":["GlobalStyles","createGlobalStyle","FjellaOne","StyledHeader","styled","div","Line","Header","InputForm","ObjInputForm","ObjAddBtn","button","Input","input","Selector","select","FormItem","code","setCode","line","parent","useState","type","setType","value","setValue","internalProps","props","map","prop","key","addPropsHandler","newProp","name","uuid","push","htmlFor","placeholder","onChange","e","target","defaultValue","findIndex","el","onClick","i","splice","StyledForm","Form","undefined","console","log","updatedCode","newCode","CodeItem","ObjectCode","className","ArrayCodeItem","StyledArrayItem","StyledDisplay","CodeBox","Display","initialCodeElem","Container","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAAe,MAA0B,8CC8D1BA,EA3DMC,YAAH,w3BAGLC,G,OCKPC,EAAeC,IAAOC,IAAV,sKASZC,EAAOF,IAAOC,IAAV,8FAMKE,EAxBc,WAC3B,OACE,eAACJ,EAAD,WACE,2DACA,cAACG,EAAD,Q,OCiHAE,EAAYJ,IAAOC,IAAV,yFAMTI,EAAeL,YAAOI,EAAPJ,CAAH,uKASZM,EAAYN,IAAOO,OAAV,uEAMTC,EAAQR,IAAOS,MAAV,0FAKLC,EAAWV,IAAOW,OAAV,0FAMCC,EApImB,SAA5BA,EAA6B,GAAmC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,OAAY,EAC3CC,mBAAiB,UAD0B,mBAC5DC,EAD4D,KACtDC,EADsD,OAEzCF,mBAAiB,IAFwB,mBAE5DG,EAF4D,KAErDC,EAFqD,KAI7DC,IAAqB,OAAJP,QAAI,IAAJA,OAAA,EAAAA,EAAMQ,QAAS,IAAIC,KAAI,SAAAC,GAAI,OAChD,cAACb,EAAD,CAAUC,KAAMA,EAAMC,QAASA,EAASC,KAAMU,EAAMT,OAAQD,GAAWU,EAAKC,QAyB9E,SAASC,IAIP,IAAMC,EAAoB,CACxBC,KAAM,GACNX,KAAM,SACNQ,IAAKI,gBAGHf,EAAKQ,MACPR,EAAKQ,MAAMQ,KAAKH,GAEhBb,EAAKQ,MAAQ,CAACK,GAGhBd,EAAQ,YAAID,IAwBd,OACE,eAACT,EAAD,WACoB,WAAX,OAANY,QAAM,IAANA,OAAA,EAAAA,EAAQE,OACP,qCACE,uBAAOc,QAAQ,GAAf,mBACA,cAACxB,EAAD,CAAOyB,YAAY,QAAQC,SApDnC,SAA4BC,GAC1Bd,EAASc,EAAEC,OAAOhB,OAClBL,EAAKc,KAAOM,EAAEC,OAAOhB,MACrBN,EAAQ,YAAID,KAiDmDO,MAAOA,OAGpE,uBAAOY,QAAQ,GAAf,mBACA,eAACtB,EAAD,CAAU2B,aAAcnB,EAAMgB,SAtElC,SAA2BC,GACzBhB,EAAQgB,EAAEC,OAAOhB,OACjBL,EAAKG,KAAOiB,EAAEC,OAAOhB,MAEE,UAAnBe,EAAEC,OAAOhB,OAAwC,WAAnBe,EAAEC,OAAOhB,OACzCL,EAAKQ,MAAQ,GACbI,YAEOZ,EAAKQ,MAEdT,EAAQ,YAAID,KA4DV,UACE,wBAAQO,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,SAAd,uBAG8C,IAA/CP,EAAKyB,WAAU,SAAAC,GAAE,OAAIA,EAAGb,OAAH,OAAWX,QAAX,IAAWA,OAAX,EAAWA,EAAMW,SAA+B,WAAX,OAANV,QAAM,IAANA,OAAA,EAAAA,EAAQE,OAC3D,wBAAQsB,QArCd,WAEE,UAAIxB,QAAJ,IAAIA,OAAJ,EAAIA,EAAQO,MAAO,CAEjB,IAAMkB,EAAIzB,EAAOO,MAAMe,WAAU,SAAAC,GAAE,OAAIA,EAAGb,MAAQX,EAAKW,OAGvDV,EAAOO,MAAMmB,OAAOD,EAAG,OAClB,CAEL,IAAMA,EAAI5B,EAAKyB,WAAU,SAAAC,GAAE,OAAIA,EAAGb,MAAQX,EAAKW,OAG/Cb,EAAK6B,OAAOD,EAAG,GAIjB3B,EAAQ,YAAID,KAoBR,qBAGc,WAAdE,EAAKG,MAAmC,UAAdH,EAAKG,OAC/B,eAACb,EAAD,WACGiB,EACc,WAAdP,EAAKG,MAAqB,cAACZ,EAAD,CAAWkC,QAASb,EAApB,4BCpE/BgB,EAAa3C,IAAOC,IAAV,0MAYD2C,EAtCe,SAAC,GAAqB,IAApB/B,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAgBpC,OACE,eAAC6B,EAAD,WACE,qGACUE,IAAThC,GACCA,EAAKW,KAAI,SAAAT,GAAI,OAAI,cAAC,EAAD,CAAUF,KAAMA,EAAMC,QAASA,EAASC,KAAMA,GAAWA,EAAKW,QACjF,wBAAQc,QAnBZ,WACEM,QAAQC,IAAI,8BACZ,IAAIC,EACEC,EAAoB,CACxBpB,KAAM,GACNX,KAAM,SACNQ,IAAKI,gBAGPkB,OAAuBH,IAAThC,EAAA,sBAAyBA,GAAzB,CAA+BoC,IAAW,CAACA,GACzDnC,EAAQkC,GAERF,QAAQC,IAAIlC,IAOV,yBCzBAqC,EAA4B,SAA5BA,EAA6B,GAAY,IAAXnC,EAAU,EAAVA,KAC5BO,GAAiBP,EAAKQ,OAAS,IAAIC,KAAI,SAAAC,GAAI,OAC/C,cAAC0B,EAAD,UAA4BpC,EAAKQ,OAAS,cAAC2B,EAAD,CAAUnC,KAAMU,KAAzCA,EAAKC,QAGxB,OACE,sBAAK0B,UAAU,iBAAf,UACE,+BAAqB,UAAdrC,EAAKG,MAAkC,WAAdH,EAAKG,MAA9B,UAAsDH,EAAKc,KAA3D,aAAoEd,EAAKG,QAEjE,UAAdH,EAAKG,MAAoBH,EAAKQ,OAC7B,mCACE,2CACMR,EAAKc,KADX,iBAC4B,cAAC,EAAD,CAAed,KAAMA,EAAKQ,MAAM,KAD5D,aAKW,WAAdR,EAAKG,MACJ,qCACE,8CAAeH,EAAKc,KAApB,UACCd,EAAKQ,OAASD,EACf,0CAd+BP,EAAKW,MAqBxCyB,EAAanD,IAAOC,IAAV,wEAKVoD,EAAiC,SAAjCA,EAAkC,GAAY,IAAXtC,EAAU,EAAVA,KACjCO,GAAiBP,EAAKQ,OAAS,IAAIC,KAAI,SAAAC,GAAI,OAC/C,cAAC0B,EAAD,UAA4BpC,EAAKQ,OAAS,cAAC,EAAD,CAAUR,KAAMU,KAAzCA,EAAKC,QAGxB,OACE,eAAC4B,EAAD,WACGvC,EAAKQ,OAAuB,UAAdR,EAAKG,MAClB,mDACc,cAACmC,EAAD,CAAetC,KAAMA,EAAKQ,MAAM,KAD9C,WAIa,UAAdR,EAAKG,MAAkC,WAAdH,EAAKG,MAAqBH,EAAKG,KAC1C,WAAdH,EAAKG,MAAqBH,EAAKQ,OAC9B,yCAEGR,EAAKQ,OAASD,EAFjB,WAUO4B,IAETI,EAAkBtD,IAAOC,IAAV,gDC3CfsD,EAAgBvD,IAAOC,IAAV,+KAUbuD,EAAUxD,IAAOC,IAAV,qLASEwD,EAjCkB,SAAC,GAAY,IAAX5C,EAAU,EAAVA,KAEjC,OACE,eAAC0C,EAAD,WACE,gDACA,cAACC,EAAD,UACG3C,EAAKW,KAAI,SAAAT,GAAI,OACZ,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKW,cCLtCgC,EAAkB,CACpB7B,KAAM,GACNX,KAAM,SACNQ,IAAKI,gBAkBP,IAAM6B,EAAY3D,IAAOC,IAAV,4IAQA2D,EAvBf,WAAgB,IAAD,EACW3C,mBAA0B,CAACyC,IADtC,mBACN7C,EADM,KACAC,EADA,KAGb,OACE,sBAAKsC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,eAACO,EAAD,WACE,cAAC,EAAD,CAAM9C,KAAMA,EAAMC,QAASA,IAC3B,cAAC,EAAD,CAASD,KAAMA,WC3BvBgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.66da3f59.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/FjallaOne-Regular.c674a102.ttf\";","import {createGlobalStyle} from 'styled-components';\nimport FjellaOne from '../fonts/FjallaOne-Regular.ttf';\n\nconst GlobalStyles = createGlobalStyle`\n@font-face {\n  font-family: 'FjellaOne';\n  src: url(${FjellaOne});\n}\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: none;\n  }\n\n  html {\n    font-size: 62.5%\n  }\n\n  body {\n    background-color: #2f2f2f;\n    color: #eaeaea;\n    font-family: 'FjellaOne';\n  }\n\n  h1 {\n    font-size: 3rem;\n  }\n  h2 {\n    font-size: 3.5rem;\n  }\n  h3 {\n    font-size: 2.5rem;\n  }\n  h4 {\n    font-size: 2.3rem;\n  }\n  p {\n    font-size: 1.8rem;\n  }\n  code {\n    font-size: 1.5rem;\n    color: #000;\n    display:block\n  }\n  button {\n    padding: 1.2rem 3rem;\n    margin: 0rem 0.5rem;\n    font-weight: bolder;\n    border: none;\n    background-color: #e06c2e;\n    transition: all 0.3s ease-in-out;\n    color: #fff;\n    &:hover {\n    color: #e06c2e;\n    background-color: #fff;\n    }\n    &:focus {\n      outline: #fff 1px solid\n    }\n  }\n`;\n\nexport default GlobalStyles;\n","import styled from 'styled-components';\n\nconst Header: React.FC<{}> = () => {\n  return (\n    <StyledHeader>\n      <h1>TypeScript Type Generator</h1>\n      <Line />\n    </StyledHeader>\n  );\n};\n\nconst StyledHeader = styled.div`\n  min-height: 10vh;\n  /* width: vw; */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Line = styled.div`\n  height: 0.5rem;\n  width: 35rem;\n  background-color: #e06c2e;\n`;\n\nexport default Header;\n","import {useState} from 'react';\nimport styled from 'styled-components';\nimport {v4 as uuid} from 'uuid';\n\ninterface Props {\n  code: Array<codeElem>;\n  line: codeElem;\n  parent?: codeElem;\n\n  setCode: Function;\n}\n\ninterface codeElem {\n  name: string;\n  type: string;\n  key: string;\n  props?: Array<codeElem> | undefined;\n}\n\nconst FormItem: React.FC<Props> = ({code, setCode, line, parent}) => {\n  const [type, setType] = useState<string>('number');\n  const [value, setValue] = useState<string>('');\n\n  const internalProps = (line?.props || []).map(prop => (\n    <FormItem code={code} setCode={setCode} line={prop} parent={line} key={prop.key} />\n  ));\n\n  //* sets the type of the code element or the prop selected\n  function typeChangeHandler(e: any) {\n    setType(e.target.value);\n    line.type = e.target.value;\n\n    if (e.target.value === 'Array' || e.target.value === 'object') {\n      line.props = [];\n      addPropsHandler();\n    } else {\n      delete line.props;\n    }\n    setCode([...code]);\n  }\n\n  //* sets the name selected on the code element or prop\n  function valueChangeHandler(e: any) {\n    setValue(e.target.value);\n    line.name = e.target.value;\n    setCode([...code]);\n  }\n\n  //* When object is selected as type, create a prop\n  function addPropsHandler() {\n    // console.log('addPropsToObjHandler() initiated');\n    // console.log(line.props);\n\n    const newProp: codeElem = {\n      name: '',\n      type: 'number',\n      key: uuid(),\n    };\n\n    if (line.props) {\n      line.props.push(newProp);\n    } else {\n      line.props = [newProp];\n    }\n    // console.log(line.props);\n    setCode([...code]);\n  }\n\n  //* delete code element or prop\n  function deleteElemHandler() {\n    // console.log(line);\n    if (parent?.props) {\n      // Delete item with splice on parent\n      const i = parent.props.findIndex(el => el.key === line.key);\n      // console.log(i);\n      // console.log('Does have parent, deleting from it');\n      parent.props.splice(i, 1);\n    } else {\n      // delete item with splice on code\n      const i = code.findIndex(el => el.key === line.key);\n      // console.log(i);\n      // console.log(\"Doesn't have parent, deleting from code\");\n      code.splice(i, 1);\n    }\n\n    // update code state\n    setCode([...code]);\n  }\n\n  return (\n    <InputForm>\n      {parent?.type !== 'Array' && (\n        <>\n          <label htmlFor=\"\">Name:</label>\n          <Input placeholder=\"value\" onChange={valueChangeHandler} value={value} />\n        </>\n      )}\n      <label htmlFor=\"\">Type:</label>\n      <Selector defaultValue={type} onChange={typeChangeHandler}>\n        <option value=\"number\">Number</option>\n        <option value=\"string\">String</option>\n        <option value=\"Array\">Array</option>\n        <option value=\"object\">Object</option>\n      </Selector>\n\n      {code.findIndex(el => el.key === line?.key) !== 0 && parent?.type !== 'Array' && (\n        <button onClick={deleteElemHandler}>Delete</button>\n      )}\n\n      {(line.type === 'object' || line.type === 'Array') && (\n        <ObjInputForm>\n          {internalProps}\n          {line.type === 'object' && <ObjAddBtn onClick={addPropsHandler}>Add new</ObjAddBtn>}\n        </ObjInputForm>\n      )}\n    </InputForm>\n  );\n};\n\nconst InputForm = styled.div`\n  label {\n    font-size: 1.4rem;\n    margin: 0.5rem;\n  }\n`;\nconst ObjInputForm = styled(InputForm)`\n  margin-left: 5rem;\n  margin-bottom: 1rem;\n  margin-top: 1rem;\n  border: 1px solid #e06c2e;\n  border-radius: 1rem;\n  padding: 1rem;\n`;\n\nconst ObjAddBtn = styled.button`\n  margin-left: 5rem;\n\n  display: block;\n`;\n\nconst Input = styled.input`\n  width: 25rem;\n  padding: 1rem 0rem;\n  margin: 1rem 0rem;\n`;\nconst Selector = styled.select`\n  margin: 0rem 1rem;\n  width: 10rem;\n  padding: 1rem 0rem;\n`;\n\nexport default FormItem;\n","import {v4 as uuid} from 'uuid';\nimport styled from 'styled-components';\nimport FormItem from './FormItem';\n\ninterface Props {\n  code: Array<codeElem>;\n  line?: codeElem;\n\n  setCode: Function;\n}\n\ninterface codeElem {\n  name: string;\n  type: string;\n  key: string;\n  props?: Array<codeElem> | undefined;\n}\n\nconst Form: React.FC<Props> = ({code, setCode}) => {\n  //* adding a new code element to state\n  function addFormItemHandler() {\n    console.log('addCodeHandler() initiated');\n    let updatedCode = [];\n    const newCode: codeElem = {\n      name: '',\n      type: 'number',\n      key: uuid(),\n    };\n\n    updatedCode = code !== undefined ? [...code, newCode] : [newCode];\n    setCode(updatedCode);\n\n    console.log(code);\n  }\n  return (\n    <StyledForm>\n      <h3>Select input type and name. Then you will see the magic happen</h3>\n      {code !== undefined &&\n        code.map(line => <FormItem code={code} setCode={setCode} line={line} key={line.key} />)}\n      <button onClick={addFormItemHandler}>Add new</button>\n    </StyledForm>\n  );\n};\n\nconst StyledForm = styled.div`\n  width: 100rem;\n  min-height: 80rem;\n  border-radius: 2rem;\n  border: 1px solid #eaeaea;\n  margin-right: 2rem;\n  padding: 5rem;\n  h3 {\n    margin-bottom: 2rem;\n  }\n`;\n\nexport default Form;\n","import styled from 'styled-components';\n\ninterface Props {\n  line: codeElem;\n  props?: Array<codeElem> | undefined;\n}\n\ninterface codeElem {\n  name: string;\n  type: string;\n  key: string;\n  props?: Array<codeElem> | undefined;\n}\n\nconst CodeItem: React.FC<Props> = ({line}) => {\n  const internalProps = (line.props || []).map(prop => (\n    <ObjectCode key={prop.key}>{line.props && <CodeItem line={prop} />}</ObjectCode>\n  ));\n\n  return (\n    <div className=\"line-container\" key={line.key}>\n      <code>{line.type !== 'Array' && line.type !== 'object' && `${line.name}: ${line.type}`}</code>\n\n      {line.type === 'Array' && line.props && (\n        <>\n          <code>\n            {`${line.name}: Array <`} <ArrayCodeItem line={line.props[0]} /> {`>`}\n          </code>\n        </>\n      )}\n      {line.type === 'object' && (\n        <>\n          <code>{`type ${line.name} = {`}</code>\n          {line.props && internalProps}\n          <code>{`}`}</code>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst ObjectCode = styled.div`\n  margin-left: 2rem;\n  font-size: 1.1rem;\n`;\n\nconst ArrayCodeItem: React.FC<Props> = ({line}) => {\n  const internalProps = (line.props || []).map(prop => (\n    <ObjectCode key={prop.key}>{line.props && <CodeItem line={prop} />}</ObjectCode>\n  ));\n\n  return (\n    <StyledArrayItem>\n      {line.props && line.type === 'Array' && (\n        <>\n          {`Array <`} <ArrayCodeItem line={line.props[0]} /> {`>`}\n        </>\n      )}\n      {line.type !== 'Array' && line.type !== 'object' && line.type}\n      {line.type === 'object' && line.props && (\n        <>\n          {`{`}\n          {line.props && internalProps}\n          {`}`}\n        </>\n      )}\n    </StyledArrayItem>\n  );\n};\n\nexport default CodeItem;\n\nconst StyledArrayItem = styled.div`\n  display: inline;\n`;\n","import styled from 'styled-components';\n\nimport CodeItem from './CodeItem';\n\ninterface Props {\n  code: Array<codeElem>;\n}\n\ninterface codeElem {\n  name: string;\n  type: string;\n  key: string;\n  props?: Array<codeElem> | undefined;\n}\n\nconst Display: React.FC<Props> = ({code}) => {\n  // console.log(code);\n  return (\n    <StyledDisplay>\n      <h3>Code goes here</h3>\n      <CodeBox>\n        {code.map(line => (\n          <CodeItem line={line} key={line.key} />\n        ))}\n      </CodeBox>\n    </StyledDisplay>\n  );\n};\n\nconst StyledDisplay = styled.div`\n  max-width: 70rem;\n  flex-grow: 1;\n  min-height: 80rem;\n  border-radius: 2rem;\n  border: 1px solid #eaeaea;\n  h3 {\n    padding: 2rem;\n  }\n`;\nconst CodeBox = styled.div`\n  margin: 0rem 3.5rem;\n  min-height: 50rem;\n  padding: 3rem 5rem;\n  background-color: #7f7f7f;\n  border: 2px solid #e06c2e;\n  border-radius: 1rem;\n`;\n\nexport default Display;\n","import {useState} from 'react';\nimport {v4 as uuid} from 'uuid';\n\nimport styled from 'styled-components';\nimport GlobalStyles from './components/GlobalStyles';\n\nimport Header from './components/Header';\nimport Form from './components/Form';\nimport Display from './components/Display';\n\ninterface codeElem {\n  name: string;\n  type: string;\n  key: string;\n  props?: Array<codeElem> | undefined;\n}\n\nlet initialCodeElem = {\n  name: '',\n  type: 'number',\n  key: uuid(),\n};\n\nfunction App() {\n  const [code, setCode] = useState<Array<codeElem>>([initialCodeElem]);\n\n  return (\n    <div className=\"app\">\n      <GlobalStyles />\n      <Header />\n      <Container>\n        <Form code={code} setCode={setCode} />\n        <Display code={code} />\n      </Container>\n    </div>\n  );\n}\n\nconst Container = styled.div`\n  min-height: 50vh;\n  margin: 2rem 5rem;\n  width: 95vw;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}